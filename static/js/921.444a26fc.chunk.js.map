{"version":3,"file":"static/js/921.444a26fc.chunk.js","mappings":"2TAEO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IACrB,4FAFG,cACCC,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACgBL,IAAAA,IAAA,0DACgCK,EADhC,oEADhB,cACCC,EADD,yBAIEA,EAAOJ,KAAKC,SAJd,kEAOA,IAAMI,EAAW,mCAAG,WAAMC,GAAN,uFACJR,IAAAA,IAAA,6CACmBQ,EADnB,6DADI,cACnBC,EADmB,yBAIlBA,EAAOP,MAJW,2CAAH,sDAOjB,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,uFACiBR,IAAAA,IAAA,6CACkBQ,EADlB,qEADjB,cACCG,EADD,yBAIEA,EAAQT,KAAKU,MAJf,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,uFACgBR,IAAAA,IAAA,6CACmBQ,EADnB,sDADhB,cACCM,EADD,yBAIEA,EAAOZ,KAAKC,SAJd,oE,8KC5BMY,EAAgBC,EAAAA,GAAAA,OAAH,kcAmBbC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAmBF,EAAAA,GAAAA,OAAH,4gBA4BhBG,EAAkBH,EAAAA,GAAAA,MAAH,kP,sCC9Cb,SAASI,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMvB,EAAQsB,EAAaE,IAAI,SAiC/B,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKZ,8GAEiC1B,EAAAA,EAAAA,IAAYC,GAF7C,OAGkC,KADpB0B,EAFd,QAGuBC,SACXC,EAAAA,EAAAA,IAAM,6BAA8B,CAAEC,MAAO,SAAC,MAAD,CAASC,KAAM,OAGhEZ,EAAQQ,GAPhB,gDASQE,EAAAA,GAAAA,MAAY,sBAAuB,CAAEG,SAAU,eATvD,0DALY,sBACE,OAAV/B,GADQ,mCAiBZgC,KACD,CAAChC,KAGF,iCACE,SAACU,EAAD,WACE,UAACE,EAAD,CAAYqB,SAlCG,SAAAC,GACjBA,EAAEC,iBACFZ,EAAgB,CAAEvB,MAAOkC,EAAEE,cAAcC,SAASrC,MAAMsC,QAEJ,KAAhDJ,EAAEE,cAAcC,SAASrC,MAAMsC,MAAMC,OAIzCL,EAAEE,cAAcI,QAHZZ,EAAAA,GAAAA,MAAY,uBAAwB,CAAEG,SAAU,gBA6BlD,WACE,UAAClB,EAAD,CAAkB4B,KAAK,SAAvB,WACE,SAAC,MAAD,CAAeX,KAAM,KADvB,KAC8B,yCAG9B,SAAChB,EAAD,CACE2B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,cACZC,KAAK,eAKV5B,EAAKU,OAAS,IACb,wBACGV,EAAK6B,KAAI,gBAAG3C,EAAH,EAAGA,GAAI4C,EAAP,EAAOA,MAAP,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAa7C,GAAM8C,MAAO,CAAEC,KAAM/B,GAA1C,SACG4B,KAFI5C","sources":["APImovies/MoviesAPI.js","components/FilmPage/Searchbar.jsx","components/FilmPage/FilmPage.js"],"sourcesContent":["import axios from 'axios';\n\nexport async function FetchTrendingMovies() {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=1eb38d59a687bed126a4b0cccb43fe8f'\n  );\n  return response.data.results;\n}\n\nexport async function SearchMovie(query) {\n  const search = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=1eb38d59a687bed126a4b0cccb43fe8f&language=en-US&page=1`\n  );\n  return search.data.results;\n}\n\nexport const FilmDetails = async id => {\n  const detail = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=1eb38d59a687bed126a4b0cccb43fe8f&language=en-US`\n  );\n  return detail.data;\n};\n\nexport async function MovieCredits(id) {\n  const credits = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=1eb38d59a687bed126a4b0cccb43fe8f&language=en-US`\n  );\n  return credits.data.cast;\n}\n\nexport async function MoviesView(id) {\n  const review = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=1eb38d59a687bed126a4b0cccb43fe8f`\n  );\n  return review.data.results;\n}\n","import styled from 'styled-components';\n\nexport const SearchbarHead = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: darkcyan;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n` \n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n` \n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n  opacity: 1;\n}\nspan {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n}\n`\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n&:placeholder {\n  font: inherit;\n  font-size: 18px;\n}\n`","import { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { SearchMovie } from '../../APImovies/MoviesAPI';\nimport {\n  SearchbarHead,\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './Searchbar';\nimport { MdError } from 'react-icons/md';\nimport { FaSearchengin } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\n\nexport default function FilmPage() {\n    const [film, setFilm] = useState([]);\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setSearchParams({ query: e.currentTarget.elements.query.value });\n\n        if (e.currentTarget.elements.query.value.trim() === '') {\n            toast.error('Negative, try again!', { position: 'top-center' });\n            return;\n        }\n        e.currentTarget.reset();\n    };\n\n    useEffect(() => {\n        if (query === null) {\n            return;\n        }\n\n        async function SearchMovies() {\n            try {\n                const cardSearch = await SearchMovie(query);\n                if (cardSearch.length === 0) {\n                    toast('By your request no results', { icon: (<MdError size={18} />), });\n                    \n                }\n                setFilm(cardSearch);\n            } catch (error) {\n                toast.error('Negative, try again', { position: 'top-center' });\n            }\n        }\n        SearchMovies();\n    }, [query]);\n\n    return (\n      <>\n        <SearchbarHead>\n          <SearchForm onSubmit={handleSubmit}>\n            <SearchFormButton type=\"submit\">\n              <FaSearchengin size={18} /> <span>Search</span>\n            </SearchFormButton>\n\n            <SearchFormInput\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search film\"\n              name=\"query\"\n            />\n          </SearchForm>\n        </SearchbarHead>\n\n        {film.length > 0 && (\n          <ul>\n            {film.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n}"],"names":["FetchTrendingMovies","axios","response","data","results","SearchMovie","query","search","FilmDetails","id","detail","MovieCredits","credits","cast","MoviesView","review","SearchbarHead","styled","SearchForm","SearchFormButton","SearchFormInput","FilmPage","useState","film","setFilm","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","cardSearch","length","toast","icon","size","position","SearchMovies","onSubmit","e","preventDefault","currentTarget","elements","value","trim","reset","type","autoComplete","autoFocus","placeholder","name","map","title","to","state","from"],"sourceRoot":""}