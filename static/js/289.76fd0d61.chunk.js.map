{"version":3,"file":"static/js/289.76fd0d61.chunk.js","mappings":"2TAEO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IACrB,4FAFG,cACCC,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACgBL,IAAAA,IAAA,0DACgCK,EADhC,oEADhB,cACCC,EADD,yBAIEA,EAAOJ,KAAKC,SAJd,kEAOA,IAAMI,EAAW,mCAAG,WAAMC,GAAN,uFACJR,IAAAA,IAAA,6CACmBQ,EADnB,6DADI,cACnBC,EADmB,yBAIlBA,EAAOP,MAJW,2CAAH,sDAOjB,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,uFACiBR,IAAAA,IAAA,6CACkBQ,EADlB,qEADjB,cACCG,EADD,yBAIEA,EAAQT,KAAKU,MAJf,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,uFACgBR,IAAAA,IAAA,6CACmBQ,EADnB,sDADhB,cACCM,EADD,yBAIEA,EAAOZ,KAAKC,SAJd,oE,2LC1BMY,EAASC,EAAAA,GAAAA,IAAH,wCAINC,EAAkBD,EAAAA,GAAAA,IAAH,6CAIfE,EAAiBF,EAAAA,GAAAA,IAAH,wHAUdG,EAAYH,EAAAA,GAAAA,IAAH,uOAQTI,EAAgBJ,EAAAA,GAAAA,IAAH,oMAKbK,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,6C,mBCxBRO,EAAY,SAAC,GAAc,IAAD,YAAXC,EAAW,EAAXA,KACpBC,EAASD,EAAKhB,GACdkB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,6BACE,UAAC,KAAD,CAAMC,GAAE,iBAAEF,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,QAAnC,WACE,SAAC,MAAD,IADF,cAIA,UAACX,EAAD,YACE,SAACF,EAAD,WACE,SAACF,EAAD,CACEgB,IAAG,yCAAoCP,EAAKQ,aAC5CC,IAAI,WAIR,4BACE,0BACGT,EAAKU,MADR,IACgBV,EAAKW,aAAaC,MAAM,EAAG,GAD3C,QAGA,wCAAoC,GAApBZ,EAAKa,aAArB,QACA,sCACA,uBAAIb,EAAKc,YACT,oCACA,SAACpB,EAAD,UACGM,EAAKe,OAAOC,KAAI,SAAAhB,GAAI,OACnB,uBAAkBA,EAAKiB,MAAfjB,EAAKhB,gBAMrB,UAACY,EAAD,YACE,oDACA,2BACE,SAACC,EAAD,CACEO,GAAE,kBAAaH,EAAb,SACFI,MAAO,CAAEC,KAAI,iBAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAF1C,mBAMA,SAAC,KAAD,CACEF,GAAE,kBAAaH,EAAb,YACFI,MAAO,CAAEC,KAAI,iBAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAF1C,4BASJ,SAAC,KAAD,QCzDS,SAASY,IACtB,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOrB,EAAP,KAAasB,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBxC,EAAAA,EAAAA,IAAYoC,GAFnC,OAEUnB,EAFV,OAGIsB,EAAQtB,GAHZ,gDAKIwB,EAAAA,GAAAA,MAAY,uBAAwB,CAAEC,SAAU,eALpD,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACP,KAGF,8BACGnB,IAAQ,SAACD,EAAD,CAAWC,KAAMA","sources":["APImovies/MoviesAPI.js","components/Poster/PosterBlock.styled.jsx","components/Poster/PosterBlock.js","components/FilmDescrp/FilmDescrp.js"],"sourcesContent":["import axios from 'axios';\n\nexport async function FetchTrendingMovies() {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=1eb38d59a687bed126a4b0cccb43fe8f'\n  );\n  return response.data.results;\n}\n\nexport async function SearchMovie(query) {\n  const search = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=1eb38d59a687bed126a4b0cccb43fe8f&language=en-US&page=1`\n  );\n  return search.data.results;\n}\n\nexport const FilmDetails = async id => {\n  const detail = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=1eb38d59a687bed126a4b0cccb43fe8f&language=en-US`\n  );\n  return detail.data;\n};\n\nexport async function MovieCredits(id) {\n  const credits = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=1eb38d59a687bed126a4b0cccb43fe8f&language=en-US`\n  );\n  return credits.data.cast;\n}\n\nexport async function MoviesView(id) {\n  const review = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=1eb38d59a687bed126a4b0cccb43fe8f`\n  );\n  return review.data.results;\n}\n","import styled from \"styled-components\";\nimport {  NavLink } from \"react-router-dom\"\n\n\nexport const Poster = styled.img`\nheight: 350px;\n`\n\nexport const PosterContainer = styled.div`\nmargin-right: 20px;\n`\n\nexport const GenreContainer = styled.div`\ndisplay: flex;\np:not(:last-child) {\n    margin-right: 15px;\n}\np {\n    margin-top: 0px;\n}\n`\n\nexport const Container = styled.div`\ndisplay: flex;\n-webkit-box-shadow: 5px 5px 10px 2px rgba(34, 60, 80, 0.2);\n-moz-box-shadow: 5px 5px 10px 2px rgba(34, 60, 80, 0.2);\nbox-shadow: 5px 5px 10px 2px rgba(34, 60, 80, 0.2);\nmargin-top: 15px;\n`\n\nexport const InfoContainer = styled.div`\n-webkit-box-shadow: 5px 5px 10px 2px rgba(34, 60, 80, 0.2);\n-moz-box-shadow: 5px 5px 10px 2px rgba(34, 60, 80, 0.2);\nbox-shadow: 5px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`\nexport const CastLink = styled(NavLink)`\nmargin-right: 15px;\n`","import {\n  Poster,\n  Container,\n  PosterContainer,\n  GenreContainer,\n  InfoContainer,\n  CastLink,\n} from './PosterBlock.styled.jsx';\nimport { FaRegHandPointLeft } from 'react-icons/fa';\nimport { Link, NavLink, Outlet, useLocation } from 'react-router-dom';\n\nexport const FilmBlock = ({ item }) => {\n  const filmID = item.id;\n  const location = useLocation();\n\n  return (\n    <main>\n      <Link to={location?.state?.from ?? '/home'}>\n        <FaRegHandPointLeft />\n        Go back\n      </Link>\n      <Container>\n        <PosterContainer>\n          <Poster\n            src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\n            alt=\"alt\"\n          />\n        </PosterContainer>\n\n        <div>\n          <h2>\n            {item.title}({item.release_date.slice(0, 4)})\n          </h2>\n          <p>User score: {item.vote_average * 10}%</p>\n          <h3>Overview</h3>\n          <p>{item.overview}</p>\n          <h3>Genres</h3>\n          <GenreContainer>\n            {item.genres.map(item => (\n              <p key={item.id}>{item.name}</p>\n            ))}\n          </GenreContainer>\n        </div>\n      </Container>\n\n      <InfoContainer>\n        <h3>Additional information</h3>\n        <ul>\n          <CastLink\n            to={`/movies/${filmID}/cast`}\n            state={{ from: location?.state?.from ?? '/' }}\n          >\n            Cast\n          </CastLink>\n          <NavLink\n            to={`/movies/${filmID}/reviews`}\n            state={{ from: location?.state?.from ?? '/' }}\n          >\n            Reviews\n          </NavLink>\n        </ul>\n      </InfoContainer>\n\n      <Outlet />\n    </main>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { FilmDetails } from '../../APImovies/MoviesAPI';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { FilmBlock } from '../Poster/PosterBlock';\n\nexport default function FilmDetailsPage() {\n  const { itemId } = useParams();\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    async function fetchItem() {\n      try {\n        const item = await FilmDetails(itemId);\n        setItem(item);\n      } catch (error) {\n        toast.error('Negative, try again!', { position: 'top-center' });\n      }\n    }\n    fetchItem();\n  }, [itemId]);\n\n  return (\n    <>\n      {item && <FilmBlock item={item} />}\n    </>\n  );\n}"],"names":["FetchTrendingMovies","axios","response","data","results","SearchMovie","query","search","FilmDetails","id","detail","MovieCredits","credits","cast","MoviesView","review","Poster","styled","PosterContainer","GenreContainer","Container","InfoContainer","CastLink","NavLink","FilmBlock","item","filmID","location","useLocation","to","state","from","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","name","FilmDetailsPage","itemId","useParams","useState","setItem","useEffect","toast","position","fetchItem"],"sourceRoot":""}